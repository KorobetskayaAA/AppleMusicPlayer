<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Themes/DefaultTheme.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <sys:Double x:Key="SongItemHeight">60</sys:Double>

    <Style TargetType="Window">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrush}"/>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
    </Style>

    <Style TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrush}"/>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Margin" Value="1,0,1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                            CornerRadius="7"
                            Margin="{TemplateBinding Margin}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Background>
                            <SolidColorBrush x:Name="ButtonBackground" Color="{TemplateBinding Background}"/>
                        </Border.Background>
                        <ContentControl x:Name="ButtonContent"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}">
                        </ContentControl>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="BorderBrush.Opacity" To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="BorderBrush.Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="Color" To="{StaticResource PressedBackgroundColor}" />
                                        <ThicknessAnimation Duration="0" Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="BorderThickness" To="2,2,1,1" />
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="ButtonContent" Storyboard.TargetProperty="Opacity" To="0.7" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="BorderBrush.Opacity" To="0" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ButtonContent" Storyboard.TargetProperty="Opacity" To="0.4" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrush}"/>
    </Style>
    
    <Style TargetType="ListViewItem">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="{StaticResource SongItemHeight}"/>
        <Setter Property="Template">
            <Setter.Value>
                <!-- Trun off default selection-->
                <ControlTemplate TargetType="ListViewItem">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="Transparent"
                            Padding="{TemplateBinding Padding}" >
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="SongItemTemplate">
        <Grid x:Name="DataPanel" Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Image Grid.Column="0" Grid.RowSpan="2"
                   Margin="2"
                   Source="{Binding Image}" VerticalAlignment="Stretch" />
            <TextBlock Grid.Column="1" Grid.Row="0"
                       Text="{Binding Artist}" ToolTip="Исполнитель"
                       Margin="2"
                       FontSize="12" FontWeight="Bold" TextWrapping="Wrap" TextAlignment="Left"/>
            <TextBlock Grid.Column="1" Grid.Row="1"
                       Text="{Binding Name}" ToolTip="Название"
                       Margin="2"
                       FontSize="13" TextWrapping="WrapWithOverflow" TextAlignment="Left" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}},Path=IsSelected}" Value="True" >
                <Setter TargetName="DataPanel" Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style TargetType="GridSplitter">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1,0,1,0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Width" Value="3"/>
    </Style>

    <!-- Slider -->
    <Style x:Key="HorizontalSliderThumb" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Height" Value="15"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="0:0:0.1" 
                                             Storyboard.TargetName="center" 
                                             Storyboard.TargetProperty="(Ellipse.Height)"
                                             To="7" />
                            <DoubleAnimation Duration="0:0:0.1" 
                                             Storyboard.TargetName="center" 
                                             Storyboard.TargetProperty="(Ellipse.Width)"
                                             To="7"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="0:0:0.1" 
                                             Storyboard.TargetName="center" 
                                             Storyboard.TargetProperty="(Ellipse.Height)"
                                             To="11"/>
                            <DoubleAnimation Duration="0:0:0.1" 
                                             Storyboard.TargetName="center" 
                                             Storyboard.TargetProperty="(Ellipse.Width)"
                                             To="11">
                            </DoubleAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="Transparent">
                        <Ellipse Stretch="Fill" Fill="{StaticResource NormalForegroundBrush}"/>
                        <Ellipse x:Name="center" Width="11" Height="11" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{StaticResource ActiveBackgroundBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="center" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="Opacity" Value=".8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonLeft" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Height" Value="6"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border Background="{StaticResource ActiveBackgroundBrush}"
                                BorderBrush="{StaticResource NormalBorderBrush}" 
                                BorderThickness="1"
                                CornerRadius="2"
                                Margin="0,0,-5,0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonRight" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Height" Value="6"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border Background="Transparent"
                                BorderBrush="{StaticResource NormalBorderBrush}" 
                                BorderThickness="1"
                                CornerRadius="2"
                                Margin="-5,0,0,0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FocusLine2">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="True" Stroke="#ddd" StrokeDashArray="1 2" StrokeThickness="1" Margin="-6"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Slider">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine2}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TickBar x:Name="TopTick"
                                 Grid.Row="0" 
                                 Visibility="Collapsed" Placement="Top" HorizontalAlignment="Stretch"
                                 Height="5"
                                 Fill="{StaticResource NormalForegroundBrush}"/>
                        <TickBar x:Name="BottomTick"
                                 Grid.Row="2" 
                                 Visibility="Collapsed" Placement="Bottom" HorizontalAlignment="Stretch"
                                 Height="5"
                                 Fill="{StaticResource NormalForegroundBrush}"/>
                        <Track Grid.Row="1" x:Name="PART_Track">
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="LeftRB" Style="{StaticResource RepeatButtonRight}" Command="Slider.IncreaseLarge"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="RightRB" Style="{StaticResource RepeatButtonLeft}" Command="Slider.DecreaseLarge"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb" Style="{StaticResource HorizontalSliderThumb}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.62"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>