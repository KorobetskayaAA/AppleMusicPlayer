<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Themes/DefaultTheme.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <sys:Double x:Key="SongItemHeight">60</sys:Double>
    <sys:Double x:Key="SongItemWidth">120</sys:Double>

    <Style TargetType="Window">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrush}"/>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
    </Style>

    <Style TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrush}"/>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Margin" Value="1,0,1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                            CornerRadius="7"
                            Margin="{TemplateBinding Margin}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Background>
                            <SolidColorBrush x:Name="ButtonBackground" Color="{TemplateBinding Background}"/>
                        </Border.Background>
                        <ContentControl x:Name="ButtonContent"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}">
                        </ContentControl>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="BorderBrush.Opacity" To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="BorderBrush.Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="Color" To="{StaticResource PressedBackgroundColor}" />
                                        <ThicknessAnimation Duration="0" Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="BorderThickness" To="2,2,1,1" />
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="ButtonContent" Storyboard.TargetProperty="Opacity" To="0.7" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="BorderBrush.Opacity" To="0.5" />
                                        <ThicknessAnimation Duration="0" Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="BorderThickness" To="1,1,0,0" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="Color" To="{StaticResource DisabledBackgroundColor}" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ButtonContent" Storyboard.TargetProperty="Opacity" To="0.4" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Slider">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrush}"/>

    </Style>

    <Style TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource NormalBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NormalForegroundBrush}"/>
    </Style>
    
    <Style TargetType="ListViewItem">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <!-- Trun off default selection-->
                <ControlTemplate TargetType="ListViewItem">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="Transparent"
                            Padding="{TemplateBinding Padding}" >
                        <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="SongItemTemplate">
        <StackPanel x:Name="DataPanel"
                    Margin="0" Width="{StaticResource SongItemWidth}">
            <Image Source="{Binding Image}" Height="{StaticResource SongItemHeight}" />
            <TextBlock Text="{Binding Artist}" ToolTip="Исполнитель"
                       FontSize="12" FontWeight="Bold" TextWrapping="Wrap" TextAlignment="Center"/>
            <TextBlock Text="{Binding Name}" ToolTip="Название"
                       FontSize="13" TextWrapping="WrapWithOverflow" TextAlignment="Center" />
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}},Path=IsSelected}" Value="True" >
                <Setter TargetName="DataPanel" Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>